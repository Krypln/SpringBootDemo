package com.nokia.example.Interview;

/**
 * Created by YLongYao on 2016/10/31.
 */
public class MVCIssue {
    /**
     * 1、MVC是Model-View-Control的简称，即模型-视图-控制器，它是存在于服务器表达层的模型，
     *    它将应用分开，改变应用之间的高耦合性
     *
     * 2、视图：数据的展现；
     *      用户看到并与之交互的界面，视图可以向模型查看业务状态，但是不能改变模型，
     *      还能接收模型发出的数据更新事件，从而对用户界面进行同步更新。
     *
     *    模型：应用对象；
     *      应用程序的主题部分，代表了业务数据和业务逻辑，当数据发生改变时能通知视图部分，
     *      同一个模型可以被多个视图重用，所以提高了应用的可重用性。
     *
     *    控制器：逻辑处理、控制实体数据在视图上展示、调用模型处理业务请求；
     *      当Web用户提交HTML表单时，控制器就收请求并调用相应的模型组件去处理请求，
     *      然后调用相应的视图来显示模型返回的数据。
     *
     * 3、Web用户向服务器提交的所有请求都由控制器来接管，接收到请求后，
     *  控制器负责决定调用哪个模型来进行处理，然后模型根据用户的请求进行相应的业务逻辑处理并返回数据，
     *  最后控制器调用相应的视图来格式化模型返回的数据，并通过视图呈现给用户。
     */
}
